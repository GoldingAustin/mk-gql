# source: http://localhost:3000/graphql
# timestamp: Wed Jul 18 2018 00:44:33 GMT+0300 (Eastern European Summer Time)

"""Autogenerated input type of AddComment"""
input AddCommentInput {
  articleId: ID!
  body: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of AddComment"""
type AddCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  comment: Comment
  errors: [UserError!]!
}

type Article {
  author: User!
  body: String!
  comments: [Comment!]!
  createdAt: DateTime!
  description: String!
  favoritesCount: Int!
  id: ID!
  slug: String!
  tagList: [String!]!
  title: String!
  updatedAt: DateTime!
  viewerHasFavorited: Boolean!
}

"""The connection type for Article."""
type ArticleConnection {
  """A list of edges."""
  edges: [ArticleEdge]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type ArticleEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Article
}

type Comment {
  article: Article
  author: User
  body: String!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

"""Autogenerated input type of CreateArticle"""
input CreateArticleInput {
  title: String!
  description: String!
  body: String!
  tagList: [String!]!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateArticle"""
type CreateArticlePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [UserError!]!
}

"""Autogenerated input type of CreateUser"""
input CreateUserInput {
  username: String!
  email: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of CreateUser"""
type CreateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [UserError!]!
  user: Viewer
}

scalar DateTime

"""Autogenerated input type of DeleteArticle"""
input DeleteArticleInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteArticle"""
type DeleteArticlePayload {
  article: Article!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of DeleteComment"""
input DeleteCommentInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of DeleteComment"""
type DeleteCommentPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  comment: Comment
}

"""Autogenerated input type of FavoriteArticle"""
input FavoriteArticleInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of FavoriteArticle"""
type FavoriteArticlePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""The connection type for User."""
type FollowersConnection {
  """A list of edges."""
  edges: [UserEdge]

  """A list of nodes."""
  nodes: [User]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
  totalCount: Int!
}

"""Autogenerated input type of FollowUser"""
input FollowUserInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of FollowUser"""
type FollowUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

type Mutation {
  addComment(input: AddCommentInput!): AddCommentPayload
  createArticle(input: CreateArticleInput!): CreateArticlePayload
  createUser(input: CreateUserInput!): CreateUserPayload
  deleteArticle(input: DeleteArticleInput!): DeleteArticlePayload
  deleteComment(input: DeleteCommentInput!): DeleteCommentPayload
  favoriteArticle(input: FavoriteArticleInput!): FavoriteArticlePayload
  followUser(input: FollowUserInput!): FollowUserPayload
  signInUser(input: SignInUserInput!): SignInUserPayload
  unfavoriteArticle(input: UnfavoriteArticleInput!): UnfavoriteArticlePayload
  unfollowUser(input: UnfollowUserInput!): UnfollowUserPayload
  updateArticle(input: UpdateArticleInput!): UpdateArticlePayload
  updateUser(input: UpdateUserInput!): UpdateUserPayload
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Query {
  article(slug: String!): Article
  articles(
    """Returns the first _n_ elements from the list."""
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    tag: String
    authoredBy: String
    favoritedBy: String
  ): ArticleConnection!
  tags: [String!]!
  user(username: String!): User
  viewer: Viewer
}

"""Autogenerated input type of SignInUser"""
input SignInUserInput {
  email: String!
  password: String!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SignInUser"""
type SignInUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [UserError!]!
  token: String
  viewer: Viewer
}

"""Autogenerated input type of UnfavoriteArticle"""
input UnfavoriteArticleInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UnfavoriteArticle"""
type UnfavoriteArticlePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of UnfollowUser"""
input UnfollowUserInput {
  id: ID!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UnfollowUser"""
type UnfollowUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

"""Autogenerated input type of UpdateArticle"""
input UpdateArticleInput {
  id: ID!
  title: String!
  description: String!
  body: String!
  tagList: [String!]!

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateArticle"""
type UpdateArticlePayload {
  article: Article

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [UserError!]!
}

"""Autogenerated input type of UpdateUser"""
input UpdateUserInput {
  email: String!
  username: String!
  bio: String
  image: String
  password: String

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of UpdateUser"""
type UpdateUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  errors: [UserError!]!
  user: User
}

type User {
  articles(
    """Returns the first _n_ elements from the list."""
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
  ): ArticleConnection!
  bio: String
  email: String!
  favoriteArticles(
    """Returns the first _n_ elements from the list."""
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
  ): ArticleConnection!
  followedByViewer: Boolean!
  followers(
    """Returns the first _n_ elements from the list."""
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
  ): FollowersConnection!
  id: ID!
  image: String
  username: String!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User
}

type UserError {
  message: String!
  path: [String!]
}

type Viewer {
  feed(
    """Returns the first _n_ elements from the list."""
    first: Int

    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """Returns the last _n_ elements from the list."""
    last: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
  ): ArticleConnection!
  user: User!
}
